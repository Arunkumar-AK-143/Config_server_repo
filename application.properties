// =============================
// âœ… Updated EventListComponent (with dropdown filters)
// =============================

// TypeScript: event-list.component.ts
Type '(number | undefined)[]' is not assignable to type 'number[]'.
  Type 'number | undefined' is not assignable to type 'number'.
    Type 'undefined' is not assignable to type 'number'.ts(2322)

// HTML Template: event-list.component.html
/*
<div class="container mt-4 event-list-container">
  <h2>Available Events</h2>

  <div class="mb-3">
    <button *ngIf="userRole === 'ADMIN'" routerLink="/events/new" class="btn btn-primary">
      <i class="fas fa-plus"></i> Add New Event
    </button>
  </div>

  <div class="mb-3">
    <select [(ngModel)]="selectedId" class="form-select mb-2">
      <option [ngValue]="null">Select Event ID</option>
      <option *ngFor="let id of eventIds" [ngValue]="id">{{ id }}</option>
    </select>

    <select [(ngModel)]="selectedCategory" class="form-select mb-2">
      <option value="">Select Category</option>
      <option *ngFor="let cat of categories" [value]="cat">{{ cat }}</option>
    </select>

    <button class="btn btn-outline-primary me-2" (click)="filterEvents()">Filter</button>
    <button class="btn btn-outline-secondary" (click)="resetFilters()">Reset</button>
  </div>

  <div *ngIf="errorMessage" class="alert alert-danger">{{ errorMessage }}</div>

  <div *ngIf="isLoading" class="text-center">
    <div class="spinner-border text-primary" role="status"></div>
    <p>Loading events...</p>
  </div>

  <div *ngIf="!isLoading && filteredEvents.length === 0 && !errorMessage" class="alert alert-info">
    <p>No events match your criteria.</p>
  </div>

  <div *ngIf="!isLoading && filteredEvents.length > 0" class="row">
    <div class="col-md-4 mb-4" *ngFor="let event of filteredEvents">
      <div class="card event-card h-100">
        <div class="card-body">
          <h5 class="card-title">
            <a [routerLink]="['/events', event.id]" class="text-decoration-none">{{ event.name }}</a>
          </h5>
          <p class="card-text"><strong>Category:</strong> {{ event.category }}</p>
          <p class="card-text"><strong>Location:</strong> {{ event.location }}</p>
          <p class="card-text"><strong>Date:</strong> {{ event.date | date:'mediumDate' }}</p>
          <p class="card-text">
            <strong>Tickets Available:</strong>
            <span [ngClass]="{
              'text-danger': event.ticketCount !== undefined && event.ticketCount <= 10,
              'text-warning': event.ticketCount > 10 && event.ticketCount <= 50,
              'text-success': event.ticketCount > 50
            }">
              {{ event.ticketCount !== undefined ? event.ticketCount : 'N/A' }}
            </span>
          </p>

          <div class="mt-2 d-flex justify-content-between align-items-center">
            <ng-container>
              <button *ngIf="event.ticketCount && event.ticketCount > 0 && userRole !== 'ADMIN'"
                      [routerLink]="['/tickets', event.id]" class="btn btn-sm btn-success me-2">
                Book Tickets
              </button>
              <span *ngIf="event.ticketCount !== undefined && event.ticketCount <= 0 && userRole !== 'ADMIN'"
                    class="text-danger me-2">Sold Out!</span>
            </ng-container>

            <button class="btn btn-primary btn-sm me-2" (click)="viewDetails(event.id)">
              View Details
            </button>

            <div *ngIf="userRole === 'ADMIN'" class="d-flex">
              <button [routerLink]="['/events/edit', event.id]" class="btn btn-sm btn-warning me-2">Edit</button>
              <button (click)="deleteEvent(event.id)" class="btn btn-sm btn-danger">Delete</button>
            </div>
          </div>

        </div>
      </div>
    </div>
  </div>
</div>
*/
