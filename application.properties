import { Inject, Injectable, PLATFORM_ID } from '@angular/core';
import { isPlatformBrowser } from '@angular/common';

@Injectable({
  providedIn: 'root'
})
export class AuthService {
  constructor(@Inject(PLATFORM_ID) private platformId: Object) {}

  getUserRole(): Observable<string | null> {
    if (!isPlatformBrowser(this.platformId)) {
      return of(null); // SSR fallback
    }

    const token = localStorage.getItem('jwtToken');
    if (!token) return of(null);

    try {
      const payload = JSON.parse(atob(token.split('.')[1]));
      return of(payload.role || null);
    } catch (e) {
      console.error('Failed to decode token', e);
      return of(null);
    }
  }

  // Do the same for getCurrentUserId() and others if needed
}