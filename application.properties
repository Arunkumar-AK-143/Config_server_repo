// src/app/feedback/my-feedback-list/my-feedback-list.component.ts

import { Component, OnInit } from '@angular/core';
import { Feedback } from '../../models/feedback.model';
import { Event } from '../../models/event.model';
import { FeedbackService } from '../../services/feedback.service';
import { EventService } from '../../services/event.service';
import { AuthService } from '../../services/auth.service';
import { switchMap, map, combineLatest, of } from 'rxjs';

@Component({
  selector: 'app-my-feedback-list',
  templateUrl: './my-feedback-list.component.html',
  standalone: false,
  styleUrls: ['./my-feedback-list.component.css']
})
export class MyFeedbackListComponent implements OnInit {
  feedbackList: Feedback[] = [];
  eventsMap: { [key: number]: Event } = {};
  errorMessage = '';
  userId: number | null = null;

  constructor(
    private feedbackService: FeedbackService,
    private eventService: EventService,
    private authService: AuthService
  ) {}

  ngOnInit(): void {
    this.authService.getCurrentUserId().pipe(
      switchMap(id => {
        this.userId = id;
        if (!id) {
          this.errorMessage = 'Please log in to view your feedback.';
          return of([]);
        }
        return this.feedbackService.getAllFeedbackByUserId(id); // You need this backend endpoint
      }),
      switchMap(feedbacks => {
        this.feedbackList = feedbacks;

        const eventIds = Array.from(new Set(feedbacks.map(fb => fb.eventId)));
        if (eventIds.length === 0) return of([]);

        const eventObservables = eventIds.map(eventId => this.eventService.getEventById(eventId));
        return combineLatest(eventObservables).pipe(
          map(events => {
            events.forEach(event => {
              if (event.id) this.eventsMap[event.id] = event;
            });
            return feedbacks;
          })
        );
      })
    ).subscribe({
      error: err => {
        console.error('Error loading feedback or events:', err);
        this.errorMessage = 'Failed to load feedback. Please try again.';
      }
    });
  }

  getEventInfo(eventId: number): string {
    const event = this.eventsMap[eventId];
    return event ? `#${event.id} - ${event.name}` : 'Loading...';
  }
}



<!-- my-feedback-list.component.html -->
<div class="container mt-4">
  <h2>My Feedback</h2>

  <div *ngIf="errorMessage" class="alert alert-danger">
    {{ errorMessage }}
  </div>

  <div *ngIf="feedbackList.length > 0">
    <table class="table table-bordered">
      <thead>
        <tr>
          <th>Event</th>
          <th>Rating</th>
          <th>Comments</th>
          <th>Submitted</th>
        </tr>
      </thead>
      <tbody>
        <tr *ngFor="let feedback of feedbackList">
          <td>{{ getEventInfo(feedback.eventId) }}</td>
          <td>{{ feedback.rating }} / 5</td>
          <td>{{ feedback.comments }}</td>
          <td>{{ feedback.submittedTimestamp | date:'medium' }}</td>
        </tr>
      </tbody>
    </table>
  </div>

  <div *ngIf="feedbackList.length === 0 && !errorMessage" class="alert alert-info">
    You haven't submitted any feedback yet.
  </div>
</div>
